{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavkumar/Desktop/portfolio/src/components/header.js\",\n  _s = $RefreshSig$();\n// Header.js\nimport React, { useState, useEffect } from 'react';\nimport HeaderDesktop from './desktopheader';\nimport HeaderMobile from './mobileheader';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Detect screen width and adjust state accordingly\n  useEffect(() => {\n    const checkScreenWidth = () => {\n      setIsMobile(window.innerWidth <= 768); // Set breakpoint for mobile\n    };\n\n    // Run on component mount\n    checkScreenWidth();\n\n    // Add event listener on window resize\n    window.addEventListener('resize', checkScreenWidth);\n\n    // Cleanup the event listener on component unmount\n    return () => window.removeEventListener('resize', checkScreenWidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isMobile ? /*#__PURE__*/_jsxDEV(HeaderMobile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(HeaderDesktop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 38\n    }, this)\n  }, void 0, false);\n};\n_s(Header, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","HeaderDesktop","HeaderMobile","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","isMobile","setIsMobile","checkScreenWidth","window","innerWidth","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaibhavkumar/Desktop/portfolio/src/components/header.js"],"sourcesContent":["// Header.js\nimport React, { useState, useEffect } from 'react';\nimport HeaderDesktop from './desktopheader';\nimport HeaderMobile from './mobileheader';\nimport './Header.css';\n\nconst Header = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Detect screen width and adjust state accordingly\n  useEffect(() => {\n    const checkScreenWidth = () => {\n      setIsMobile(window.innerWidth <= 768); // Set breakpoint for mobile\n    };\n\n    // Run on component mount\n    checkScreenWidth();\n\n    // Add event listener on window resize\n    window.addEventListener('resize', checkScreenWidth);\n\n    // Cleanup the event listener on component unmount\n    return () => window.removeEventListener('resize', checkScreenWidth);\n  }, []);\n\n  return (\n    <>\n      {isMobile ? <HeaderMobile /> : <HeaderDesktop />}\n    </>\n  );\n};\n\nexport default Header;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;MAC7BD,WAAW,CAACE,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC;;IAED;IACAF,gBAAgB,CAAC,CAAC;;IAElB;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,gBAAgB,CAAC;;IAEnD;IACA,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,gBAAgB,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACGP,QAAQ,gBAAGL,OAAA,CAACF,YAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACH,aAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChD,CAAC;AAEP,CAAC;AAACZ,EAAA,CAxBID,MAAM;AAAAc,EAAA,GAANd,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}